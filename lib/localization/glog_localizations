import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'locales/en.dart';
import 'locales/ko.dart';

class GlogLocalizations {
  GlogLocalizations(this.locale);

  final Locale locale;

  static GlogLocalizations of(BuildContext context) =>
    Localizations.of<GlogLocalizations>(context, GlogLocalizations);

  static LocalizationsDelegate<GlogLocalizations> get delegate => _GlogLocalizationsDelegate();

  Map<String, String> get langPack {
    switch(locale.languageCode) {
      case 'en' : return enLangPack;
      case 'ko' : return koLangPack;
    }
  }

  String get title => langPack['title'];
}

class _GlogLocalizationsDelegate extends LocalizationsDelegate<GlogLocalizations>{
  const _GlogLocalizationsDelegate();

  @override
  bool isSupported(Locale locale) => ['en','ko'].contains(locale.languageCode);

  @override
  Future<GlogLocalizations> load(Locale locale) =>
      SynchronousFuture<GlogLocalizations>(GlogLocalizations(locale));

  @override
  bool shouldReload(LocalizationsDelegate<GlogLocalizations> old) => false;
}
